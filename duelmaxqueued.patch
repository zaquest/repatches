diff --ed a/config/usage.cfg b/config/usage.cfg
--- a/config/usage.cfg
+++ b/config/usage.cfg
330a
setdesc "duelmaxqueued" "maximum number of players for duel;^n0 = any number of players" "<value>"
setdesc "survivormaxqueued" "maximum number of players for survivor;^n0 = any number of players" "<value>"
.
diff --git a/src/game/duelmut.h b/src/game/duelmut.h
index c7a14be..030ba2b 100644
--- a/src/game/duelmut.h
+++ b/src/game/duelmut.h
@@ -49,6 +49,18 @@ struct duelservmode : servmode
     {
         if(ci->state.actortype >= A_ENEMY || ci->state.state == CS_SPECTATOR) return;
         if(gamestate == G_S_OVERTIME && !restricted.empty() && restricted.find(ci) < 0) return;
+        if(DSGS(maxqueued) && duelqueue.find(ci) < 0 && playing.find(ci) < 0)
+        {
+            int count = 0;
+            loopv(duelqueue) if(duelqueue[i]->state.actortype == A_PLAYER) count++;
+            loopv(playing) if(playing[i]->state.actortype == A_PLAYER) count++;
+            if(count >= DSGS(maxqueued))
+            {
+                spectator(ci);
+                srvmsgft(ci->clientnum, CON_EVENT, "\fysorry, the \fs\fcqueue\fS is \fs\fzgcFULL\fS (max: \fs\fc%d\fS %s)", DSGS(maxqueued), DSGS(maxqueued) != 1 ? "players" : "player");
+                return;
+            }
+        }
         if(ci->state.actortype == A_PLAYER && waitforhumans) waitforhumans = false;
         int n = duelqueue.find(ci);
         if(top)
diff --git a/src/game/vars.h b/src/game/vars.h
index dd4f868..e7e3034 100644
--- a/src/game/vars.h
+++ b/src/game/vars.h
@@ -259,6 +259,7 @@ GVAR(0, duelcycles, 0, 2, VAR_MAX); // maximum wins in a row before force-cyclin
 GVAR(0, duelaffinity, 0, 1, 2); // 0 = off, 1 = on enter can respawn next iter, 2 = on enter can respawn immediately
 GVAR(0, duelbotcheck, 0, 1, 1); // 0 = off, 1 = skip bots when checking respawns
 GVAR(0, duelovertime, 0, 1, 1); // 0 = off, 1 = ffa: only spawn leaders in overtime
+GVAR(0, duelmaxqueued, 0, 0, MAXCLIENTS); // number of players that can be queued for duel. 0 = any number of players
 
 GVAR(0, survivorreset, 0, 1, 1); // reset winners in survivor
 GVAR(0, survivorclear, 0, 1, 1); // clear items in survivor
@@ -268,6 +269,7 @@ GVAR(0, survivorcooloff, 0, 3000, VAR_MAX); // cool off period before survivor g
 GVAR(0, survivoraffinity, 0, 0, 1); // 0 = off, 1 = on enter can spawn immediately
 GVAR(0, survivorbotcheck, 0, 1, 1); // 0 = off, 1 = skip bots when checking respawns
 GVAR(0, survivorovertime, 0, 1, 1); // 0 = off, 1 = ffa: only spawn leaders in overtime
+GVAR(0, survivormaxqueued, 0, 0, MAXCLIENTS); // number of players that can be queued for survivor. 0 = any number of players
 
 GVAR(0, pointlimit, 0, 0, VAR_MAX); // finish when score is this or more
 GVAR(0, teampersist, 0, 1, 2); // 0 = off, 1 = only attempt, 2 = forced
