diff --git a/config/menus/editing.cfg b/config/menus/editing.cfg
index f66953b..8de6b0f 100644
--- a/config/menus/editing.cfg
+++ b/config/menus/editing.cfg
@@ -423,15 +423,10 @@
                     guiloopscrollbar j $imax 15 15 [
                         p = (at $prefabs $j)
                         guibutton $p [
-                            pasteprefab @p 
-                            if $prefabcopy [
-                                editdel
-                                pasteprefab @@p
-                                copy
-                                undo
-                            ]
-                            cleargui 
-                        ] 
+                            copyprefab @p
+                            if $prefabcopy pastehilight paste
+                            cleargui
+                        ]
                     ]
                 ]
                 guinocursorfx [guiprefabpreview $guirollovername -1 [] 7.5 1 []]
diff --git a/config/setup.cfg b/config/setup.cfg
index 561f1a2..24355a3 100644
--- a/config/setup.cfg
+++ b/config/setup.cfg
@@ -1,5 +1,5 @@
 complete exec .
-complete pasteprefab prefab obr
+complete copyprefab prefab obr
 
 mapcomplete     = [ setcomplete $arg1 1; complete $arg1 maps mpz ]; mapcomplete map
 start           = [ mode $arg2 $arg3; map $arg1 ]; mapcomplete start
diff --git a/src/engine/octaedit.cpp b/src/engine/octaedit.cpp
index ef2620c..1d2ba91 100644
--- a/src/engine/octaedit.cpp
+++ b/src/engine/octaedit.cpp
@@ -1280,13 +1280,29 @@ prefab *loadprefab(const char *name, bool msg = true)
    return b;
 }
 
-void pasteprefab(char *name)
+/* Create a copy of block3 */
+block3 *copyblock(block3 *s)
 {
-    if(!name[0] || noedit() || multiplayer()) return;
+    int bsize = sizeof(block3)+sizeof(cube)*s->size();
+    if(bsize <= 0 || bsize > (100<<20)) return 0;
+    block3 *b = (block3 *)new uchar[bsize];
+    *b = *s;
+    loopi(s->size()) copycube(s->c()[i], b->c()[i]);
+    return b;
+}
+
+/* Copy prefab `name` to clipboard */
+void copyprefab(char *name)
+{
+    if(!name[0] || noedit()) return;
     prefab *b = loadprefab(name, true);
-    if(b) pasteblock(*b->copy, sel, true);
+    if(!b) return;
+    if(multiplayer(false)) client::edittrigger(sel, EDIT_COPY, 1);
+    if(!localedit) localedit = editinfos.add(new editinfo);
+    if(localedit->copy) freeblock(localedit->copy);
+    localedit->copy = copyblock(b->copy);
 }
-COMMAND(0, pasteprefab, "s");
+COMMAND(0, copyprefab, "s");
 
 struct prefabmesh
 {
diff --git a/src/game/client.cpp b/src/game/client.cpp
index 5a236d1..46641be 100644
--- a/src/game/client.cpp
+++ b/src/game/client.cpp
@@ -1517,14 +1517,14 @@ namespace client
         {
             outbuf = NULL;
             inlen = outlen = 0;
-        }
+            needclipboard = -1;
+        } else needclipboard = 0;
         packetbuf p(16 + outlen, ENET_PACKET_FLAG_RELIABLE);
         putint(p, N_CLIPBOARD);
         putint(p, inlen);
         putint(p, outlen);
         if(outlen > 0) p.put(outbuf, outlen);
         sendclientpacket(p.finalize(), 1);
-        needclipboard = -1;
     }
 
     void edittrigger(const selinfo &sel, int op, int arg1, int arg2, int arg3, const VSlot *vs)
@@ -1538,7 +1538,7 @@ namespace client
             {
                 switch(op)
                 {
-                    case EDIT_COPY: needclipboard = 0; break;
+                    case EDIT_COPY: needclipboard = arg1; break; // 0 - has clipboard; 1 - has clipboard with unknown geometry
                     case EDIT_PASTE:
                         if(needclipboard > 0)
                         {
diff --git a/src/game/server.cpp b/src/game/server.cpp
index 9fab790..3acf7ed 100644
--- a/src/game/server.cpp
+++ b/src/game/server.cpp
@@ -3176,7 +3176,7 @@ namespace server
                 srvmsgft(ci->clientnum, CON_EVENT, "\fysending you the map, please wait..");
                 loopi(SENDMAP_MAX) if(mapdata[i]) sendfile(ci->clientnum, 2, mapdata[i], "ri3s", N_SENDMAPFILE, i, smapcrc, smapname);
                 sendwelcome(ci);
-                ci->needclipboard = totalmillis ? totalmillis : 1;
+                ci->needclipboard = 0;
                 return true;
             }
         }
@@ -5662,10 +5662,11 @@ namespace server
         loopv(clients)
         {
             clientinfo &e = *clients[i];
-            if(e.clientnum != ci->clientnum && e.needclipboard - ci->lastclipboard >= 0)
+            if(e.clientnum != ci->clientnum && e.needclipboard < ci->lastclipboard)
             {
                 if(!flushed) { flushserver(true); flushed = true; }
                 sendpacket(e.clientnum, 1, ci->clipboard);
+                e.needclipboard = ci->lastclipboard;
             }
         }
     }
@@ -5678,7 +5679,7 @@ namespace server
         clients.add(ci);
 
         ci->connected = true;
-        ci->needclipboard = totalmillis ? totalmillis : 1;
+        ci->needclipboard = 0;
         ci->lasttimeplayed = totalmillis ? totalmillis : 1;
         ci->lasttimealive = totalmillis ? totalmillis : 1;
         ci->lasttimeactive = totalmillis ? totalmillis : 1;
@@ -7191,7 +7192,8 @@ namespace server
                 case N_CLIPBOARD:
                 {
                     int unpacklen = getint(p), packlen = getint(p);
-                    ci->cleanclipboard(false);
+                    ci->cleanclipboard();
+                    ci->lastclipboard = totalmillis ? totalmillis : 1;
                     if(ci->state != CS_EDITING)
                     {
                         if(packlen > 0) p.subbuf(packlen);
@@ -7238,13 +7240,15 @@ namespace server
                         break;
                     }
                     if(p.remaining() < packlen) { disconnect_client(sender, DISC_MSGERR); return; }
-                    packetbuf q(32 + packlen, ENET_PACKET_FLAG_RELIABLE);
+                    uchar s[MAXTRANS];
+                    ucharbuf q(s, MAXTRANS);
                     putint(q, type);
                     putint(q, ci->clientnum);
                     putint(q, unpacklen);
                     putint(q, packlen);
                     if(packlen > 0) p.get(q.subbuf(packlen).buf, packlen);
-                    sendpacket(-1, 1, q.finalize(), ci->clientnum);
+                    ci->messages.put(q.buf, q.length());
+                    curmsg += q.length();
                     break;
                 }
 
